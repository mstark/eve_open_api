=begin
#EVE Swagger Interface

#An OpenAPI for EVE Online

OpenAPI spec version: 0.7.6

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'date'

module EVEOpenAPI
  # combat object
  class GetCharactersCharacterIdStatsCombat
    # cap_drainedby_npc integer
    attr_accessor :cap_drainedby_npc

    # cap_drainedby_pc integer
    attr_accessor :cap_drainedby_pc

    # cap_draining_pc integer
    attr_accessor :cap_draining_pc

    # criminal_flag_set integer
    attr_accessor :criminal_flag_set

    # damage_from_np_cs_amount integer
    attr_accessor :damage_from_np_cs_amount

    # damage_from_np_cs_num_shots integer
    attr_accessor :damage_from_np_cs_num_shots

    # damage_from_players_bomb_amount integer
    attr_accessor :damage_from_players_bomb_amount

    # damage_from_players_bomb_num_shots integer
    attr_accessor :damage_from_players_bomb_num_shots

    # damage_from_players_combat_drone_amount integer
    attr_accessor :damage_from_players_combat_drone_amount

    # damage_from_players_combat_drone_num_shots integer
    attr_accessor :damage_from_players_combat_drone_num_shots

    # damage_from_players_energy_amount integer
    attr_accessor :damage_from_players_energy_amount

    # damage_from_players_energy_num_shots integer
    attr_accessor :damage_from_players_energy_num_shots

    # damage_from_players_fighter_bomber_amount integer
    attr_accessor :damage_from_players_fighter_bomber_amount

    # damage_from_players_fighter_bomber_num_shots integer
    attr_accessor :damage_from_players_fighter_bomber_num_shots

    # damage_from_players_fighter_drone_amount integer
    attr_accessor :damage_from_players_fighter_drone_amount

    # damage_from_players_fighter_drone_num_shots integer
    attr_accessor :damage_from_players_fighter_drone_num_shots

    # damage_from_players_hybrid_amount integer
    attr_accessor :damage_from_players_hybrid_amount

    # damage_from_players_hybrid_num_shots integer
    attr_accessor :damage_from_players_hybrid_num_shots

    # damage_from_players_missile_amount integer
    attr_accessor :damage_from_players_missile_amount

    # damage_from_players_missile_num_shots integer
    attr_accessor :damage_from_players_missile_num_shots

    # damage_from_players_projectile_amount integer
    attr_accessor :damage_from_players_projectile_amount

    # damage_from_players_projectile_num_shots integer
    attr_accessor :damage_from_players_projectile_num_shots

    # damage_from_players_smart_bomb_amount integer
    attr_accessor :damage_from_players_smart_bomb_amount

    # damage_from_players_smart_bomb_num_shots integer
    attr_accessor :damage_from_players_smart_bomb_num_shots

    # damage_from_players_super_amount integer
    attr_accessor :damage_from_players_super_amount

    # damage_from_players_super_num_shots integer
    attr_accessor :damage_from_players_super_num_shots

    # damage_from_structures_total_amount integer
    attr_accessor :damage_from_structures_total_amount

    # damage_from_structures_total_num_shots integer
    attr_accessor :damage_from_structures_total_num_shots

    # damage_to_players_bomb_amount integer
    attr_accessor :damage_to_players_bomb_amount

    # damage_to_players_bomb_num_shots integer
    attr_accessor :damage_to_players_bomb_num_shots

    # damage_to_players_combat_drone_amount integer
    attr_accessor :damage_to_players_combat_drone_amount

    # damage_to_players_combat_drone_num_shots integer
    attr_accessor :damage_to_players_combat_drone_num_shots

    # damage_to_players_energy_amount integer
    attr_accessor :damage_to_players_energy_amount

    # damage_to_players_energy_num_shots integer
    attr_accessor :damage_to_players_energy_num_shots

    # damage_to_players_fighter_bomber_amount integer
    attr_accessor :damage_to_players_fighter_bomber_amount

    # damage_to_players_fighter_bomber_num_shots integer
    attr_accessor :damage_to_players_fighter_bomber_num_shots

    # damage_to_players_fighter_drone_amount integer
    attr_accessor :damage_to_players_fighter_drone_amount

    # damage_to_players_fighter_drone_num_shots integer
    attr_accessor :damage_to_players_fighter_drone_num_shots

    # damage_to_players_hybrid_amount integer
    attr_accessor :damage_to_players_hybrid_amount

    # damage_to_players_hybrid_num_shots integer
    attr_accessor :damage_to_players_hybrid_num_shots

    # damage_to_players_missile_amount integer
    attr_accessor :damage_to_players_missile_amount

    # damage_to_players_missile_num_shots integer
    attr_accessor :damage_to_players_missile_num_shots

    # damage_to_players_projectile_amount integer
    attr_accessor :damage_to_players_projectile_amount

    # damage_to_players_projectile_num_shots integer
    attr_accessor :damage_to_players_projectile_num_shots

    # damage_to_players_smart_bomb_amount integer
    attr_accessor :damage_to_players_smart_bomb_amount

    # damage_to_players_smart_bomb_num_shots integer
    attr_accessor :damage_to_players_smart_bomb_num_shots

    # damage_to_players_super_amount integer
    attr_accessor :damage_to_players_super_amount

    # damage_to_players_super_num_shots integer
    attr_accessor :damage_to_players_super_num_shots

    # damage_to_structures_total_amount integer
    attr_accessor :damage_to_structures_total_amount

    # damage_to_structures_total_num_shots integer
    attr_accessor :damage_to_structures_total_num_shots

    # deaths_high_sec integer
    attr_accessor :deaths_high_sec

    # deaths_low_sec integer
    attr_accessor :deaths_low_sec

    # deaths_null_sec integer
    attr_accessor :deaths_null_sec

    # deaths_pod_high_sec integer
    attr_accessor :deaths_pod_high_sec

    # deaths_pod_low_sec integer
    attr_accessor :deaths_pod_low_sec

    # deaths_pod_null_sec integer
    attr_accessor :deaths_pod_null_sec

    # deaths_pod_wormhole integer
    attr_accessor :deaths_pod_wormhole

    # deaths_wormhole integer
    attr_accessor :deaths_wormhole

    # drone_engage integer
    attr_accessor :drone_engage

    # dscans integer
    attr_accessor :dscans

    # duel_requested integer
    attr_accessor :duel_requested

    # engagement_register integer
    attr_accessor :engagement_register

    # kills_assists integer
    attr_accessor :kills_assists

    # kills_high_sec integer
    attr_accessor :kills_high_sec

    # kills_low_sec integer
    attr_accessor :kills_low_sec

    # kills_null_sec integer
    attr_accessor :kills_null_sec

    # kills_pod_high_sec integer
    attr_accessor :kills_pod_high_sec

    # kills_pod_low_sec integer
    attr_accessor :kills_pod_low_sec

    # kills_pod_null_sec integer
    attr_accessor :kills_pod_null_sec

    # kills_pod_wormhole integer
    attr_accessor :kills_pod_wormhole

    # kills_wormhole integer
    attr_accessor :kills_wormhole

    # npc_flag_set integer
    attr_accessor :npc_flag_set

    # probe_scans integer
    attr_accessor :probe_scans

    # pvp_flag_set integer
    attr_accessor :pvp_flag_set

    # repair_armor_by_remote_amount integer
    attr_accessor :repair_armor_by_remote_amount

    # repair_armor_remote_amount integer
    attr_accessor :repair_armor_remote_amount

    # repair_armor_self_amount integer
    attr_accessor :repair_armor_self_amount

    # repair_capacitor_by_remote_amount integer
    attr_accessor :repair_capacitor_by_remote_amount

    # repair_capacitor_remote_amount integer
    attr_accessor :repair_capacitor_remote_amount

    # repair_capacitor_self_amount integer
    attr_accessor :repair_capacitor_self_amount

    # repair_hull_by_remote_amount integer
    attr_accessor :repair_hull_by_remote_amount

    # repair_hull_remote_amount integer
    attr_accessor :repair_hull_remote_amount

    # repair_hull_self_amount integer
    attr_accessor :repair_hull_self_amount

    # repair_shield_by_remote_amount integer
    attr_accessor :repair_shield_by_remote_amount

    # repair_shield_remote_amount integer
    attr_accessor :repair_shield_remote_amount

    # repair_shield_self_amount integer
    attr_accessor :repair_shield_self_amount

    # self_destructs integer
    attr_accessor :self_destructs

    # warp_scramble_pc integer
    attr_accessor :warp_scramble_pc

    # warp_scrambledby_npc integer
    attr_accessor :warp_scrambledby_npc

    # warp_scrambledby_pc integer
    attr_accessor :warp_scrambledby_pc

    # weapon_flag_set integer
    attr_accessor :weapon_flag_set

    # webifiedby_npc integer
    attr_accessor :webifiedby_npc

    # webifiedby_pc integer
    attr_accessor :webifiedby_pc

    # webifying_pc integer
    attr_accessor :webifying_pc


    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'cap_drainedby_npc' => :'cap_drainedby_npc',
        :'cap_drainedby_pc' => :'cap_drainedby_pc',
        :'cap_draining_pc' => :'cap_draining_pc',
        :'criminal_flag_set' => :'criminal_flag_set',
        :'damage_from_np_cs_amount' => :'damage_from_np_cs_amount',
        :'damage_from_np_cs_num_shots' => :'damage_from_np_cs_num_shots',
        :'damage_from_players_bomb_amount' => :'damage_from_players_bomb_amount',
        :'damage_from_players_bomb_num_shots' => :'damage_from_players_bomb_num_shots',
        :'damage_from_players_combat_drone_amount' => :'damage_from_players_combat_drone_amount',
        :'damage_from_players_combat_drone_num_shots' => :'damage_from_players_combat_drone_num_shots',
        :'damage_from_players_energy_amount' => :'damage_from_players_energy_amount',
        :'damage_from_players_energy_num_shots' => :'damage_from_players_energy_num_shots',
        :'damage_from_players_fighter_bomber_amount' => :'damage_from_players_fighter_bomber_amount',
        :'damage_from_players_fighter_bomber_num_shots' => :'damage_from_players_fighter_bomber_num_shots',
        :'damage_from_players_fighter_drone_amount' => :'damage_from_players_fighter_drone_amount',
        :'damage_from_players_fighter_drone_num_shots' => :'damage_from_players_fighter_drone_num_shots',
        :'damage_from_players_hybrid_amount' => :'damage_from_players_hybrid_amount',
        :'damage_from_players_hybrid_num_shots' => :'damage_from_players_hybrid_num_shots',
        :'damage_from_players_missile_amount' => :'damage_from_players_missile_amount',
        :'damage_from_players_missile_num_shots' => :'damage_from_players_missile_num_shots',
        :'damage_from_players_projectile_amount' => :'damage_from_players_projectile_amount',
        :'damage_from_players_projectile_num_shots' => :'damage_from_players_projectile_num_shots',
        :'damage_from_players_smart_bomb_amount' => :'damage_from_players_smart_bomb_amount',
        :'damage_from_players_smart_bomb_num_shots' => :'damage_from_players_smart_bomb_num_shots',
        :'damage_from_players_super_amount' => :'damage_from_players_super_amount',
        :'damage_from_players_super_num_shots' => :'damage_from_players_super_num_shots',
        :'damage_from_structures_total_amount' => :'damage_from_structures_total_amount',
        :'damage_from_structures_total_num_shots' => :'damage_from_structures_total_num_shots',
        :'damage_to_players_bomb_amount' => :'damage_to_players_bomb_amount',
        :'damage_to_players_bomb_num_shots' => :'damage_to_players_bomb_num_shots',
        :'damage_to_players_combat_drone_amount' => :'damage_to_players_combat_drone_amount',
        :'damage_to_players_combat_drone_num_shots' => :'damage_to_players_combat_drone_num_shots',
        :'damage_to_players_energy_amount' => :'damage_to_players_energy_amount',
        :'damage_to_players_energy_num_shots' => :'damage_to_players_energy_num_shots',
        :'damage_to_players_fighter_bomber_amount' => :'damage_to_players_fighter_bomber_amount',
        :'damage_to_players_fighter_bomber_num_shots' => :'damage_to_players_fighter_bomber_num_shots',
        :'damage_to_players_fighter_drone_amount' => :'damage_to_players_fighter_drone_amount',
        :'damage_to_players_fighter_drone_num_shots' => :'damage_to_players_fighter_drone_num_shots',
        :'damage_to_players_hybrid_amount' => :'damage_to_players_hybrid_amount',
        :'damage_to_players_hybrid_num_shots' => :'damage_to_players_hybrid_num_shots',
        :'damage_to_players_missile_amount' => :'damage_to_players_missile_amount',
        :'damage_to_players_missile_num_shots' => :'damage_to_players_missile_num_shots',
        :'damage_to_players_projectile_amount' => :'damage_to_players_projectile_amount',
        :'damage_to_players_projectile_num_shots' => :'damage_to_players_projectile_num_shots',
        :'damage_to_players_smart_bomb_amount' => :'damage_to_players_smart_bomb_amount',
        :'damage_to_players_smart_bomb_num_shots' => :'damage_to_players_smart_bomb_num_shots',
        :'damage_to_players_super_amount' => :'damage_to_players_super_amount',
        :'damage_to_players_super_num_shots' => :'damage_to_players_super_num_shots',
        :'damage_to_structures_total_amount' => :'damage_to_structures_total_amount',
        :'damage_to_structures_total_num_shots' => :'damage_to_structures_total_num_shots',
        :'deaths_high_sec' => :'deaths_high_sec',
        :'deaths_low_sec' => :'deaths_low_sec',
        :'deaths_null_sec' => :'deaths_null_sec',
        :'deaths_pod_high_sec' => :'deaths_pod_high_sec',
        :'deaths_pod_low_sec' => :'deaths_pod_low_sec',
        :'deaths_pod_null_sec' => :'deaths_pod_null_sec',
        :'deaths_pod_wormhole' => :'deaths_pod_wormhole',
        :'deaths_wormhole' => :'deaths_wormhole',
        :'drone_engage' => :'drone_engage',
        :'dscans' => :'dscans',
        :'duel_requested' => :'duel_requested',
        :'engagement_register' => :'engagement_register',
        :'kills_assists' => :'kills_assists',
        :'kills_high_sec' => :'kills_high_sec',
        :'kills_low_sec' => :'kills_low_sec',
        :'kills_null_sec' => :'kills_null_sec',
        :'kills_pod_high_sec' => :'kills_pod_high_sec',
        :'kills_pod_low_sec' => :'kills_pod_low_sec',
        :'kills_pod_null_sec' => :'kills_pod_null_sec',
        :'kills_pod_wormhole' => :'kills_pod_wormhole',
        :'kills_wormhole' => :'kills_wormhole',
        :'npc_flag_set' => :'npc_flag_set',
        :'probe_scans' => :'probe_scans',
        :'pvp_flag_set' => :'pvp_flag_set',
        :'repair_armor_by_remote_amount' => :'repair_armor_by_remote_amount',
        :'repair_armor_remote_amount' => :'repair_armor_remote_amount',
        :'repair_armor_self_amount' => :'repair_armor_self_amount',
        :'repair_capacitor_by_remote_amount' => :'repair_capacitor_by_remote_amount',
        :'repair_capacitor_remote_amount' => :'repair_capacitor_remote_amount',
        :'repair_capacitor_self_amount' => :'repair_capacitor_self_amount',
        :'repair_hull_by_remote_amount' => :'repair_hull_by_remote_amount',
        :'repair_hull_remote_amount' => :'repair_hull_remote_amount',
        :'repair_hull_self_amount' => :'repair_hull_self_amount',
        :'repair_shield_by_remote_amount' => :'repair_shield_by_remote_amount',
        :'repair_shield_remote_amount' => :'repair_shield_remote_amount',
        :'repair_shield_self_amount' => :'repair_shield_self_amount',
        :'self_destructs' => :'self_destructs',
        :'warp_scramble_pc' => :'warp_scramble_pc',
        :'warp_scrambledby_npc' => :'warp_scrambledby_npc',
        :'warp_scrambledby_pc' => :'warp_scrambledby_pc',
        :'weapon_flag_set' => :'weapon_flag_set',
        :'webifiedby_npc' => :'webifiedby_npc',
        :'webifiedby_pc' => :'webifiedby_pc',
        :'webifying_pc' => :'webifying_pc'
      }
    end

    # Attribute type mapping.
    def self.swagger_types
      {
        :'cap_drainedby_npc' => :'Integer',
        :'cap_drainedby_pc' => :'Integer',
        :'cap_draining_pc' => :'Integer',
        :'criminal_flag_set' => :'Integer',
        :'damage_from_np_cs_amount' => :'Integer',
        :'damage_from_np_cs_num_shots' => :'Integer',
        :'damage_from_players_bomb_amount' => :'Integer',
        :'damage_from_players_bomb_num_shots' => :'Integer',
        :'damage_from_players_combat_drone_amount' => :'Integer',
        :'damage_from_players_combat_drone_num_shots' => :'Integer',
        :'damage_from_players_energy_amount' => :'Integer',
        :'damage_from_players_energy_num_shots' => :'Integer',
        :'damage_from_players_fighter_bomber_amount' => :'Integer',
        :'damage_from_players_fighter_bomber_num_shots' => :'Integer',
        :'damage_from_players_fighter_drone_amount' => :'Integer',
        :'damage_from_players_fighter_drone_num_shots' => :'Integer',
        :'damage_from_players_hybrid_amount' => :'Integer',
        :'damage_from_players_hybrid_num_shots' => :'Integer',
        :'damage_from_players_missile_amount' => :'Integer',
        :'damage_from_players_missile_num_shots' => :'Integer',
        :'damage_from_players_projectile_amount' => :'Integer',
        :'damage_from_players_projectile_num_shots' => :'Integer',
        :'damage_from_players_smart_bomb_amount' => :'Integer',
        :'damage_from_players_smart_bomb_num_shots' => :'Integer',
        :'damage_from_players_super_amount' => :'Integer',
        :'damage_from_players_super_num_shots' => :'Integer',
        :'damage_from_structures_total_amount' => :'Integer',
        :'damage_from_structures_total_num_shots' => :'Integer',
        :'damage_to_players_bomb_amount' => :'Integer',
        :'damage_to_players_bomb_num_shots' => :'Integer',
        :'damage_to_players_combat_drone_amount' => :'Integer',
        :'damage_to_players_combat_drone_num_shots' => :'Integer',
        :'damage_to_players_energy_amount' => :'Integer',
        :'damage_to_players_energy_num_shots' => :'Integer',
        :'damage_to_players_fighter_bomber_amount' => :'Integer',
        :'damage_to_players_fighter_bomber_num_shots' => :'Integer',
        :'damage_to_players_fighter_drone_amount' => :'Integer',
        :'damage_to_players_fighter_drone_num_shots' => :'Integer',
        :'damage_to_players_hybrid_amount' => :'Integer',
        :'damage_to_players_hybrid_num_shots' => :'Integer',
        :'damage_to_players_missile_amount' => :'Integer',
        :'damage_to_players_missile_num_shots' => :'Integer',
        :'damage_to_players_projectile_amount' => :'Integer',
        :'damage_to_players_projectile_num_shots' => :'Integer',
        :'damage_to_players_smart_bomb_amount' => :'Integer',
        :'damage_to_players_smart_bomb_num_shots' => :'Integer',
        :'damage_to_players_super_amount' => :'Integer',
        :'damage_to_players_super_num_shots' => :'Integer',
        :'damage_to_structures_total_amount' => :'Integer',
        :'damage_to_structures_total_num_shots' => :'Integer',
        :'deaths_high_sec' => :'Integer',
        :'deaths_low_sec' => :'Integer',
        :'deaths_null_sec' => :'Integer',
        :'deaths_pod_high_sec' => :'Integer',
        :'deaths_pod_low_sec' => :'Integer',
        :'deaths_pod_null_sec' => :'Integer',
        :'deaths_pod_wormhole' => :'Integer',
        :'deaths_wormhole' => :'Integer',
        :'drone_engage' => :'Integer',
        :'dscans' => :'Integer',
        :'duel_requested' => :'Integer',
        :'engagement_register' => :'Integer',
        :'kills_assists' => :'Integer',
        :'kills_high_sec' => :'Integer',
        :'kills_low_sec' => :'Integer',
        :'kills_null_sec' => :'Integer',
        :'kills_pod_high_sec' => :'Integer',
        :'kills_pod_low_sec' => :'Integer',
        :'kills_pod_null_sec' => :'Integer',
        :'kills_pod_wormhole' => :'Integer',
        :'kills_wormhole' => :'Integer',
        :'npc_flag_set' => :'Integer',
        :'probe_scans' => :'Integer',
        :'pvp_flag_set' => :'Integer',
        :'repair_armor_by_remote_amount' => :'Integer',
        :'repair_armor_remote_amount' => :'Integer',
        :'repair_armor_self_amount' => :'Integer',
        :'repair_capacitor_by_remote_amount' => :'Integer',
        :'repair_capacitor_remote_amount' => :'Integer',
        :'repair_capacitor_self_amount' => :'Integer',
        :'repair_hull_by_remote_amount' => :'Integer',
        :'repair_hull_remote_amount' => :'Integer',
        :'repair_hull_self_amount' => :'Integer',
        :'repair_shield_by_remote_amount' => :'Integer',
        :'repair_shield_remote_amount' => :'Integer',
        :'repair_shield_self_amount' => :'Integer',
        :'self_destructs' => :'Integer',
        :'warp_scramble_pc' => :'Integer',
        :'warp_scrambledby_npc' => :'Integer',
        :'warp_scrambledby_pc' => :'Integer',
        :'weapon_flag_set' => :'Integer',
        :'webifiedby_npc' => :'Integer',
        :'webifiedby_pc' => :'Integer',
        :'webifying_pc' => :'Integer'
      }
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      return unless attributes.is_a?(Hash)

      # convert string to symbol for hash key
      attributes = attributes.each_with_object({}){|(k,v), h| h[k.to_sym] = v}

      if attributes.has_key?(:'cap_drainedby_npc')
        self.cap_drainedby_npc = attributes[:'cap_drainedby_npc']
      end

      if attributes.has_key?(:'cap_drainedby_pc')
        self.cap_drainedby_pc = attributes[:'cap_drainedby_pc']
      end

      if attributes.has_key?(:'cap_draining_pc')
        self.cap_draining_pc = attributes[:'cap_draining_pc']
      end

      if attributes.has_key?(:'criminal_flag_set')
        self.criminal_flag_set = attributes[:'criminal_flag_set']
      end

      if attributes.has_key?(:'damage_from_np_cs_amount')
        self.damage_from_np_cs_amount = attributes[:'damage_from_np_cs_amount']
      end

      if attributes.has_key?(:'damage_from_np_cs_num_shots')
        self.damage_from_np_cs_num_shots = attributes[:'damage_from_np_cs_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_bomb_amount')
        self.damage_from_players_bomb_amount = attributes[:'damage_from_players_bomb_amount']
      end

      if attributes.has_key?(:'damage_from_players_bomb_num_shots')
        self.damage_from_players_bomb_num_shots = attributes[:'damage_from_players_bomb_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_combat_drone_amount')
        self.damage_from_players_combat_drone_amount = attributes[:'damage_from_players_combat_drone_amount']
      end

      if attributes.has_key?(:'damage_from_players_combat_drone_num_shots')
        self.damage_from_players_combat_drone_num_shots = attributes[:'damage_from_players_combat_drone_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_energy_amount')
        self.damage_from_players_energy_amount = attributes[:'damage_from_players_energy_amount']
      end

      if attributes.has_key?(:'damage_from_players_energy_num_shots')
        self.damage_from_players_energy_num_shots = attributes[:'damage_from_players_energy_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_fighter_bomber_amount')
        self.damage_from_players_fighter_bomber_amount = attributes[:'damage_from_players_fighter_bomber_amount']
      end

      if attributes.has_key?(:'damage_from_players_fighter_bomber_num_shots')
        self.damage_from_players_fighter_bomber_num_shots = attributes[:'damage_from_players_fighter_bomber_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_fighter_drone_amount')
        self.damage_from_players_fighter_drone_amount = attributes[:'damage_from_players_fighter_drone_amount']
      end

      if attributes.has_key?(:'damage_from_players_fighter_drone_num_shots')
        self.damage_from_players_fighter_drone_num_shots = attributes[:'damage_from_players_fighter_drone_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_hybrid_amount')
        self.damage_from_players_hybrid_amount = attributes[:'damage_from_players_hybrid_amount']
      end

      if attributes.has_key?(:'damage_from_players_hybrid_num_shots')
        self.damage_from_players_hybrid_num_shots = attributes[:'damage_from_players_hybrid_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_missile_amount')
        self.damage_from_players_missile_amount = attributes[:'damage_from_players_missile_amount']
      end

      if attributes.has_key?(:'damage_from_players_missile_num_shots')
        self.damage_from_players_missile_num_shots = attributes[:'damage_from_players_missile_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_projectile_amount')
        self.damage_from_players_projectile_amount = attributes[:'damage_from_players_projectile_amount']
      end

      if attributes.has_key?(:'damage_from_players_projectile_num_shots')
        self.damage_from_players_projectile_num_shots = attributes[:'damage_from_players_projectile_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_smart_bomb_amount')
        self.damage_from_players_smart_bomb_amount = attributes[:'damage_from_players_smart_bomb_amount']
      end

      if attributes.has_key?(:'damage_from_players_smart_bomb_num_shots')
        self.damage_from_players_smart_bomb_num_shots = attributes[:'damage_from_players_smart_bomb_num_shots']
      end

      if attributes.has_key?(:'damage_from_players_super_amount')
        self.damage_from_players_super_amount = attributes[:'damage_from_players_super_amount']
      end

      if attributes.has_key?(:'damage_from_players_super_num_shots')
        self.damage_from_players_super_num_shots = attributes[:'damage_from_players_super_num_shots']
      end

      if attributes.has_key?(:'damage_from_structures_total_amount')
        self.damage_from_structures_total_amount = attributes[:'damage_from_structures_total_amount']
      end

      if attributes.has_key?(:'damage_from_structures_total_num_shots')
        self.damage_from_structures_total_num_shots = attributes[:'damage_from_structures_total_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_bomb_amount')
        self.damage_to_players_bomb_amount = attributes[:'damage_to_players_bomb_amount']
      end

      if attributes.has_key?(:'damage_to_players_bomb_num_shots')
        self.damage_to_players_bomb_num_shots = attributes[:'damage_to_players_bomb_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_combat_drone_amount')
        self.damage_to_players_combat_drone_amount = attributes[:'damage_to_players_combat_drone_amount']
      end

      if attributes.has_key?(:'damage_to_players_combat_drone_num_shots')
        self.damage_to_players_combat_drone_num_shots = attributes[:'damage_to_players_combat_drone_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_energy_amount')
        self.damage_to_players_energy_amount = attributes[:'damage_to_players_energy_amount']
      end

      if attributes.has_key?(:'damage_to_players_energy_num_shots')
        self.damage_to_players_energy_num_shots = attributes[:'damage_to_players_energy_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_fighter_bomber_amount')
        self.damage_to_players_fighter_bomber_amount = attributes[:'damage_to_players_fighter_bomber_amount']
      end

      if attributes.has_key?(:'damage_to_players_fighter_bomber_num_shots')
        self.damage_to_players_fighter_bomber_num_shots = attributes[:'damage_to_players_fighter_bomber_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_fighter_drone_amount')
        self.damage_to_players_fighter_drone_amount = attributes[:'damage_to_players_fighter_drone_amount']
      end

      if attributes.has_key?(:'damage_to_players_fighter_drone_num_shots')
        self.damage_to_players_fighter_drone_num_shots = attributes[:'damage_to_players_fighter_drone_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_hybrid_amount')
        self.damage_to_players_hybrid_amount = attributes[:'damage_to_players_hybrid_amount']
      end

      if attributes.has_key?(:'damage_to_players_hybrid_num_shots')
        self.damage_to_players_hybrid_num_shots = attributes[:'damage_to_players_hybrid_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_missile_amount')
        self.damage_to_players_missile_amount = attributes[:'damage_to_players_missile_amount']
      end

      if attributes.has_key?(:'damage_to_players_missile_num_shots')
        self.damage_to_players_missile_num_shots = attributes[:'damage_to_players_missile_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_projectile_amount')
        self.damage_to_players_projectile_amount = attributes[:'damage_to_players_projectile_amount']
      end

      if attributes.has_key?(:'damage_to_players_projectile_num_shots')
        self.damage_to_players_projectile_num_shots = attributes[:'damage_to_players_projectile_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_smart_bomb_amount')
        self.damage_to_players_smart_bomb_amount = attributes[:'damage_to_players_smart_bomb_amount']
      end

      if attributes.has_key?(:'damage_to_players_smart_bomb_num_shots')
        self.damage_to_players_smart_bomb_num_shots = attributes[:'damage_to_players_smart_bomb_num_shots']
      end

      if attributes.has_key?(:'damage_to_players_super_amount')
        self.damage_to_players_super_amount = attributes[:'damage_to_players_super_amount']
      end

      if attributes.has_key?(:'damage_to_players_super_num_shots')
        self.damage_to_players_super_num_shots = attributes[:'damage_to_players_super_num_shots']
      end

      if attributes.has_key?(:'damage_to_structures_total_amount')
        self.damage_to_structures_total_amount = attributes[:'damage_to_structures_total_amount']
      end

      if attributes.has_key?(:'damage_to_structures_total_num_shots')
        self.damage_to_structures_total_num_shots = attributes[:'damage_to_structures_total_num_shots']
      end

      if attributes.has_key?(:'deaths_high_sec')
        self.deaths_high_sec = attributes[:'deaths_high_sec']
      end

      if attributes.has_key?(:'deaths_low_sec')
        self.deaths_low_sec = attributes[:'deaths_low_sec']
      end

      if attributes.has_key?(:'deaths_null_sec')
        self.deaths_null_sec = attributes[:'deaths_null_sec']
      end

      if attributes.has_key?(:'deaths_pod_high_sec')
        self.deaths_pod_high_sec = attributes[:'deaths_pod_high_sec']
      end

      if attributes.has_key?(:'deaths_pod_low_sec')
        self.deaths_pod_low_sec = attributes[:'deaths_pod_low_sec']
      end

      if attributes.has_key?(:'deaths_pod_null_sec')
        self.deaths_pod_null_sec = attributes[:'deaths_pod_null_sec']
      end

      if attributes.has_key?(:'deaths_pod_wormhole')
        self.deaths_pod_wormhole = attributes[:'deaths_pod_wormhole']
      end

      if attributes.has_key?(:'deaths_wormhole')
        self.deaths_wormhole = attributes[:'deaths_wormhole']
      end

      if attributes.has_key?(:'drone_engage')
        self.drone_engage = attributes[:'drone_engage']
      end

      if attributes.has_key?(:'dscans')
        self.dscans = attributes[:'dscans']
      end

      if attributes.has_key?(:'duel_requested')
        self.duel_requested = attributes[:'duel_requested']
      end

      if attributes.has_key?(:'engagement_register')
        self.engagement_register = attributes[:'engagement_register']
      end

      if attributes.has_key?(:'kills_assists')
        self.kills_assists = attributes[:'kills_assists']
      end

      if attributes.has_key?(:'kills_high_sec')
        self.kills_high_sec = attributes[:'kills_high_sec']
      end

      if attributes.has_key?(:'kills_low_sec')
        self.kills_low_sec = attributes[:'kills_low_sec']
      end

      if attributes.has_key?(:'kills_null_sec')
        self.kills_null_sec = attributes[:'kills_null_sec']
      end

      if attributes.has_key?(:'kills_pod_high_sec')
        self.kills_pod_high_sec = attributes[:'kills_pod_high_sec']
      end

      if attributes.has_key?(:'kills_pod_low_sec')
        self.kills_pod_low_sec = attributes[:'kills_pod_low_sec']
      end

      if attributes.has_key?(:'kills_pod_null_sec')
        self.kills_pod_null_sec = attributes[:'kills_pod_null_sec']
      end

      if attributes.has_key?(:'kills_pod_wormhole')
        self.kills_pod_wormhole = attributes[:'kills_pod_wormhole']
      end

      if attributes.has_key?(:'kills_wormhole')
        self.kills_wormhole = attributes[:'kills_wormhole']
      end

      if attributes.has_key?(:'npc_flag_set')
        self.npc_flag_set = attributes[:'npc_flag_set']
      end

      if attributes.has_key?(:'probe_scans')
        self.probe_scans = attributes[:'probe_scans']
      end

      if attributes.has_key?(:'pvp_flag_set')
        self.pvp_flag_set = attributes[:'pvp_flag_set']
      end

      if attributes.has_key?(:'repair_armor_by_remote_amount')
        self.repair_armor_by_remote_amount = attributes[:'repair_armor_by_remote_amount']
      end

      if attributes.has_key?(:'repair_armor_remote_amount')
        self.repair_armor_remote_amount = attributes[:'repair_armor_remote_amount']
      end

      if attributes.has_key?(:'repair_armor_self_amount')
        self.repair_armor_self_amount = attributes[:'repair_armor_self_amount']
      end

      if attributes.has_key?(:'repair_capacitor_by_remote_amount')
        self.repair_capacitor_by_remote_amount = attributes[:'repair_capacitor_by_remote_amount']
      end

      if attributes.has_key?(:'repair_capacitor_remote_amount')
        self.repair_capacitor_remote_amount = attributes[:'repair_capacitor_remote_amount']
      end

      if attributes.has_key?(:'repair_capacitor_self_amount')
        self.repair_capacitor_self_amount = attributes[:'repair_capacitor_self_amount']
      end

      if attributes.has_key?(:'repair_hull_by_remote_amount')
        self.repair_hull_by_remote_amount = attributes[:'repair_hull_by_remote_amount']
      end

      if attributes.has_key?(:'repair_hull_remote_amount')
        self.repair_hull_remote_amount = attributes[:'repair_hull_remote_amount']
      end

      if attributes.has_key?(:'repair_hull_self_amount')
        self.repair_hull_self_amount = attributes[:'repair_hull_self_amount']
      end

      if attributes.has_key?(:'repair_shield_by_remote_amount')
        self.repair_shield_by_remote_amount = attributes[:'repair_shield_by_remote_amount']
      end

      if attributes.has_key?(:'repair_shield_remote_amount')
        self.repair_shield_remote_amount = attributes[:'repair_shield_remote_amount']
      end

      if attributes.has_key?(:'repair_shield_self_amount')
        self.repair_shield_self_amount = attributes[:'repair_shield_self_amount']
      end

      if attributes.has_key?(:'self_destructs')
        self.self_destructs = attributes[:'self_destructs']
      end

      if attributes.has_key?(:'warp_scramble_pc')
        self.warp_scramble_pc = attributes[:'warp_scramble_pc']
      end

      if attributes.has_key?(:'warp_scrambledby_npc')
        self.warp_scrambledby_npc = attributes[:'warp_scrambledby_npc']
      end

      if attributes.has_key?(:'warp_scrambledby_pc')
        self.warp_scrambledby_pc = attributes[:'warp_scrambledby_pc']
      end

      if attributes.has_key?(:'weapon_flag_set')
        self.weapon_flag_set = attributes[:'weapon_flag_set']
      end

      if attributes.has_key?(:'webifiedby_npc')
        self.webifiedby_npc = attributes[:'webifiedby_npc']
      end

      if attributes.has_key?(:'webifiedby_pc')
        self.webifiedby_pc = attributes[:'webifiedby_pc']
      end

      if attributes.has_key?(:'webifying_pc')
        self.webifying_pc = attributes[:'webifying_pc']
      end

    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      invalid_properties = Array.new
      return invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      return true
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          cap_drainedby_npc == o.cap_drainedby_npc &&
          cap_drainedby_pc == o.cap_drainedby_pc &&
          cap_draining_pc == o.cap_draining_pc &&
          criminal_flag_set == o.criminal_flag_set &&
          damage_from_np_cs_amount == o.damage_from_np_cs_amount &&
          damage_from_np_cs_num_shots == o.damage_from_np_cs_num_shots &&
          damage_from_players_bomb_amount == o.damage_from_players_bomb_amount &&
          damage_from_players_bomb_num_shots == o.damage_from_players_bomb_num_shots &&
          damage_from_players_combat_drone_amount == o.damage_from_players_combat_drone_amount &&
          damage_from_players_combat_drone_num_shots == o.damage_from_players_combat_drone_num_shots &&
          damage_from_players_energy_amount == o.damage_from_players_energy_amount &&
          damage_from_players_energy_num_shots == o.damage_from_players_energy_num_shots &&
          damage_from_players_fighter_bomber_amount == o.damage_from_players_fighter_bomber_amount &&
          damage_from_players_fighter_bomber_num_shots == o.damage_from_players_fighter_bomber_num_shots &&
          damage_from_players_fighter_drone_amount == o.damage_from_players_fighter_drone_amount &&
          damage_from_players_fighter_drone_num_shots == o.damage_from_players_fighter_drone_num_shots &&
          damage_from_players_hybrid_amount == o.damage_from_players_hybrid_amount &&
          damage_from_players_hybrid_num_shots == o.damage_from_players_hybrid_num_shots &&
          damage_from_players_missile_amount == o.damage_from_players_missile_amount &&
          damage_from_players_missile_num_shots == o.damage_from_players_missile_num_shots &&
          damage_from_players_projectile_amount == o.damage_from_players_projectile_amount &&
          damage_from_players_projectile_num_shots == o.damage_from_players_projectile_num_shots &&
          damage_from_players_smart_bomb_amount == o.damage_from_players_smart_bomb_amount &&
          damage_from_players_smart_bomb_num_shots == o.damage_from_players_smart_bomb_num_shots &&
          damage_from_players_super_amount == o.damage_from_players_super_amount &&
          damage_from_players_super_num_shots == o.damage_from_players_super_num_shots &&
          damage_from_structures_total_amount == o.damage_from_structures_total_amount &&
          damage_from_structures_total_num_shots == o.damage_from_structures_total_num_shots &&
          damage_to_players_bomb_amount == o.damage_to_players_bomb_amount &&
          damage_to_players_bomb_num_shots == o.damage_to_players_bomb_num_shots &&
          damage_to_players_combat_drone_amount == o.damage_to_players_combat_drone_amount &&
          damage_to_players_combat_drone_num_shots == o.damage_to_players_combat_drone_num_shots &&
          damage_to_players_energy_amount == o.damage_to_players_energy_amount &&
          damage_to_players_energy_num_shots == o.damage_to_players_energy_num_shots &&
          damage_to_players_fighter_bomber_amount == o.damage_to_players_fighter_bomber_amount &&
          damage_to_players_fighter_bomber_num_shots == o.damage_to_players_fighter_bomber_num_shots &&
          damage_to_players_fighter_drone_amount == o.damage_to_players_fighter_drone_amount &&
          damage_to_players_fighter_drone_num_shots == o.damage_to_players_fighter_drone_num_shots &&
          damage_to_players_hybrid_amount == o.damage_to_players_hybrid_amount &&
          damage_to_players_hybrid_num_shots == o.damage_to_players_hybrid_num_shots &&
          damage_to_players_missile_amount == o.damage_to_players_missile_amount &&
          damage_to_players_missile_num_shots == o.damage_to_players_missile_num_shots &&
          damage_to_players_projectile_amount == o.damage_to_players_projectile_amount &&
          damage_to_players_projectile_num_shots == o.damage_to_players_projectile_num_shots &&
          damage_to_players_smart_bomb_amount == o.damage_to_players_smart_bomb_amount &&
          damage_to_players_smart_bomb_num_shots == o.damage_to_players_smart_bomb_num_shots &&
          damage_to_players_super_amount == o.damage_to_players_super_amount &&
          damage_to_players_super_num_shots == o.damage_to_players_super_num_shots &&
          damage_to_structures_total_amount == o.damage_to_structures_total_amount &&
          damage_to_structures_total_num_shots == o.damage_to_structures_total_num_shots &&
          deaths_high_sec == o.deaths_high_sec &&
          deaths_low_sec == o.deaths_low_sec &&
          deaths_null_sec == o.deaths_null_sec &&
          deaths_pod_high_sec == o.deaths_pod_high_sec &&
          deaths_pod_low_sec == o.deaths_pod_low_sec &&
          deaths_pod_null_sec == o.deaths_pod_null_sec &&
          deaths_pod_wormhole == o.deaths_pod_wormhole &&
          deaths_wormhole == o.deaths_wormhole &&
          drone_engage == o.drone_engage &&
          dscans == o.dscans &&
          duel_requested == o.duel_requested &&
          engagement_register == o.engagement_register &&
          kills_assists == o.kills_assists &&
          kills_high_sec == o.kills_high_sec &&
          kills_low_sec == o.kills_low_sec &&
          kills_null_sec == o.kills_null_sec &&
          kills_pod_high_sec == o.kills_pod_high_sec &&
          kills_pod_low_sec == o.kills_pod_low_sec &&
          kills_pod_null_sec == o.kills_pod_null_sec &&
          kills_pod_wormhole == o.kills_pod_wormhole &&
          kills_wormhole == o.kills_wormhole &&
          npc_flag_set == o.npc_flag_set &&
          probe_scans == o.probe_scans &&
          pvp_flag_set == o.pvp_flag_set &&
          repair_armor_by_remote_amount == o.repair_armor_by_remote_amount &&
          repair_armor_remote_amount == o.repair_armor_remote_amount &&
          repair_armor_self_amount == o.repair_armor_self_amount &&
          repair_capacitor_by_remote_amount == o.repair_capacitor_by_remote_amount &&
          repair_capacitor_remote_amount == o.repair_capacitor_remote_amount &&
          repair_capacitor_self_amount == o.repair_capacitor_self_amount &&
          repair_hull_by_remote_amount == o.repair_hull_by_remote_amount &&
          repair_hull_remote_amount == o.repair_hull_remote_amount &&
          repair_hull_self_amount == o.repair_hull_self_amount &&
          repair_shield_by_remote_amount == o.repair_shield_by_remote_amount &&
          repair_shield_remote_amount == o.repair_shield_remote_amount &&
          repair_shield_self_amount == o.repair_shield_self_amount &&
          self_destructs == o.self_destructs &&
          warp_scramble_pc == o.warp_scramble_pc &&
          warp_scrambledby_npc == o.warp_scrambledby_npc &&
          warp_scrambledby_pc == o.warp_scrambledby_pc &&
          weapon_flag_set == o.weapon_flag_set &&
          webifiedby_npc == o.webifiedby_npc &&
          webifiedby_pc == o.webifiedby_pc &&
          webifying_pc == o.webifying_pc
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Fixnum] Hash code
    def hash
      [cap_drainedby_npc, cap_drainedby_pc, cap_draining_pc, criminal_flag_set, damage_from_np_cs_amount, damage_from_np_cs_num_shots, damage_from_players_bomb_amount, damage_from_players_bomb_num_shots, damage_from_players_combat_drone_amount, damage_from_players_combat_drone_num_shots, damage_from_players_energy_amount, damage_from_players_energy_num_shots, damage_from_players_fighter_bomber_amount, damage_from_players_fighter_bomber_num_shots, damage_from_players_fighter_drone_amount, damage_from_players_fighter_drone_num_shots, damage_from_players_hybrid_amount, damage_from_players_hybrid_num_shots, damage_from_players_missile_amount, damage_from_players_missile_num_shots, damage_from_players_projectile_amount, damage_from_players_projectile_num_shots, damage_from_players_smart_bomb_amount, damage_from_players_smart_bomb_num_shots, damage_from_players_super_amount, damage_from_players_super_num_shots, damage_from_structures_total_amount, damage_from_structures_total_num_shots, damage_to_players_bomb_amount, damage_to_players_bomb_num_shots, damage_to_players_combat_drone_amount, damage_to_players_combat_drone_num_shots, damage_to_players_energy_amount, damage_to_players_energy_num_shots, damage_to_players_fighter_bomber_amount, damage_to_players_fighter_bomber_num_shots, damage_to_players_fighter_drone_amount, damage_to_players_fighter_drone_num_shots, damage_to_players_hybrid_amount, damage_to_players_hybrid_num_shots, damage_to_players_missile_amount, damage_to_players_missile_num_shots, damage_to_players_projectile_amount, damage_to_players_projectile_num_shots, damage_to_players_smart_bomb_amount, damage_to_players_smart_bomb_num_shots, damage_to_players_super_amount, damage_to_players_super_num_shots, damage_to_structures_total_amount, damage_to_structures_total_num_shots, deaths_high_sec, deaths_low_sec, deaths_null_sec, deaths_pod_high_sec, deaths_pod_low_sec, deaths_pod_null_sec, deaths_pod_wormhole, deaths_wormhole, drone_engage, dscans, duel_requested, engagement_register, kills_assists, kills_high_sec, kills_low_sec, kills_null_sec, kills_pod_high_sec, kills_pod_low_sec, kills_pod_null_sec, kills_pod_wormhole, kills_wormhole, npc_flag_set, probe_scans, pvp_flag_set, repair_armor_by_remote_amount, repair_armor_remote_amount, repair_armor_self_amount, repair_capacitor_by_remote_amount, repair_capacitor_remote_amount, repair_capacitor_self_amount, repair_hull_by_remote_amount, repair_hull_remote_amount, repair_hull_self_amount, repair_shield_by_remote_amount, repair_shield_remote_amount, repair_shield_self_amount, self_destructs, warp_scramble_pc, warp_scrambledby_npc, warp_scrambledby_pc, weapon_flag_set, webifiedby_npc, webifiedby_pc, webifying_pc].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      self.class.swagger_types.each_pair do |key, type|
        if type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the the attribute
          # is documented as an array but the input is not
          if attributes[self.class.attribute_map[key]].is_a?(Array)
            self.send("#{key}=", attributes[self.class.attribute_map[key]].map{ |v| _deserialize($1, v) } )
          end
        elsif !attributes[self.class.attribute_map[key]].nil?
          self.send("#{key}=", _deserialize(type, attributes[self.class.attribute_map[key]]))
        end # or else data not found in attributes(hash), not an issue as the data can be optional
      end

      self
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def _deserialize(type, value)
      case type.to_sym
      when :DateTime
        DateTime.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :BOOLEAN
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        temp_model = EVEOpenAPI.const_get(type).new
        temp_model.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        next if value.nil?
        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map{ |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
